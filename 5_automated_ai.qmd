# Automated AI

::: {.callout-note icon="true" collapse="false"}
# Content from TAILOR deliverable report D9.6 

The content of this page is currently a re-formatted copy from the Deliverable
9.6 PhD Curriculum Report.
:::

This topic covers meta-level methods to ensure that AI tools and systems are
performant, robust and trustworthy.  

## Content/Knowledge

Students should be able to:

-   Explain the basic problems solved by AutoAI methods, including (but
    not limited to) automated algorithm configuration, automated
    algorithm selection, automated performance prediction, model
    selection, hyperparameter optimisation and neural architecture
    search.
-   Explain, in general and using specific examples, the significance of
    AutoAI problems and methods for the broader field of AI, including
    (but not limited to) the areas of machine learning, automated
    reasoning and optimisation.

In addition, students should be able to achieve a selection of the
following, more specific learning outcomes:

-   Demonstrate a working knowledge of Neural Architecture Search,
    notably how to define search spaces and optimise over these
    spaces, with both differential and black box methods.
-   Identify and define a Hyperparameter Optimization Problem (HPO),
    specifically in the domain of Algorithm Configuration and Neural
    Architecture Search. They should also be familiar with
    hyperparameter importance techniques to interpret different
    solutions to these problems.
-   Be familiar with Gaussian Processes and their modelling
    capabilities, specifically in the domain of algorithm
    configuration.
-   Assess the strengths and weaknesses of various HPO methods, notably
    bayesian and evolutionary strategies for doing such.
-   Demonstrate knowledge on various speedup techniques to HPO,
    including leveraging previous information through meta-learning,
    learning curve prediction and bandit based scheduling techniques.
-   Define multiple objectives for an optimization problem and various
    evolutionary and bayesian techniques for solving such problems.
-   Explain Dynamic Algorithm Configuration (DAC) and its difference to
    Static Algorithm Configuration. They should also be able to
    demonstrate how to use Reinforcement Learning to solve such
    optimization problems in DAC.
-   Demonstrate knowledge of AutoAI methods for tasks that go beyond
    supervised learning. This includes knowledge of the underlying
    theoretical principles and algorithms as well as knowledge of
    specific tools and systems, including their correct and effective
    use, strengths and limitations.
-   Demonstrate knowledge of AutoAI methods, tools and systems for
    problems in areas outside of machine learning (i.e., knowledge
    beyond automated machine learning).
-   Understand the way how AI systems interact with their environment,
    and what are possible pitfalls of that (e.g., badly calibrated
    confidence statements, adversarial examples, (un)explainable
    decisions)
-   Explain the importance for AI tools and systems to be able to detect
    situations in which their use becomes problematic (e.g.,
    ineffective or unsafe).
-   Demonstrate knowledge of techniques and approaches for achieving
    self-monitoring in at least one major area of AI.
-   Evaluate AI systems for safety problems in interacting with their
    environments
-   Demonstrate awareness of meta-learning, transfer learning, and
    continual learning techniques that can be leveraged to transfer
    information from earlier tasks.
-   Explain how this transfer of knowledge can be used to make AutoML
    techniques and systems more efficient.

## Methodological/Skills

Students should be able to:

-   Correctly use a range of AutoAI techniques in at least one major
    area of AI.
-   Critically assess (in technical and general ways) and explain the
    limitations of AutoAI methods.
-   Recognise and explain technical problems that may arise in the use
    of AutoAI methods.

## Transferrable/Application

Students should be able to:

-   Work effectively with others in an interdisciplinary and/or
    international team.
-   Design and manage individual projects.
-   Clearly and succinctly communicate their ideas to technical
    audiences.

